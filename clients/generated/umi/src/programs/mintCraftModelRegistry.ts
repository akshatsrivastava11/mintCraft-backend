/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  ClusterFilter,
  Context,
  Program,
  PublicKey,
} from '@metaplex-foundation/umi';
import {
  getMintCraftModelRegistryErrorFromCode,
  getMintCraftModelRegistryErrorFromName,
} from '../errors';

export const MINT_CRAFT_MODEL_REGISTRY_PROGRAM_ID =
  'W626GLKRRbE1rPZnNgi5kHgUUfFTiyzPqdvS196NdaZ' as PublicKey<'W626GLKRRbE1rPZnNgi5kHgUUfFTiyzPqdvS196NdaZ'>;

export function createMintCraftModelRegistryProgram(): Program {
  return {
    name: 'mintCraftModelRegistry',
    publicKey: MINT_CRAFT_MODEL_REGISTRY_PROGRAM_ID,
    getErrorFromCode(code: number, cause?: Error) {
      return getMintCraftModelRegistryErrorFromCode(code, this, cause);
    },
    getErrorFromName(name: string, cause?: Error) {
      return getMintCraftModelRegistryErrorFromName(name, this, cause);
    },
    isOnCluster() {
      return true;
    },
  };
}

export function getMintCraftModelRegistryProgram<T extends Program = Program>(
  context: Pick<Context, 'programs'>,
  clusterFilter?: ClusterFilter
): T {
  return context.programs.get<T>('mintCraftModelRegistry', clusterFilter);
}

export function getMintCraftModelRegistryProgramId(
  context: Pick<Context, 'programs'>,
  clusterFilter?: ClusterFilter
): PublicKey {
  return context.programs.getPublicKey(
    'mintCraftModelRegistry',
    MINT_CRAFT_MODEL_REGISTRY_PROGRAM_ID,
    clusterFilter
  );
}
